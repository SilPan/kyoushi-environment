\{% set employees_tmp = context.employees.internal.copy() }
\{%- do employees_tmp.update(context.employees.external) }
_employees:
\{%- for _employee_id, _employee_info in employees_tmp.items() }
\{%- set _ns = namespace(contacts={}) }
\{%- for _contact in employees_tmp.keys() }
 \{%- if _contact != _employee_id }
   \{%- do _ns.contacts.update({_contact: gen.random.choice([0.0001, gen.random.random()])}) }
 \{%- endif }
\{%- endfor }
 \{%- do _employee_info.update({"contacts": _ns.contacts}) }
 \var{_employee_id}: \var{ _employee_info | tojson }
\{%- endfor }

# redefine employees to include the dict key as dict value
# the key as part of the inner dict is sometimes needed
# due to the limitations of the jinja2 syntax
employees: |
  {
  {% for _eid,_employee in _employees.items() %}
    {% do _employee.update({'key_': _eid}) %}
    "{{ _eid }}":{{ _employee }}{% if not loop.last %},{% endif %}
  {% endfor %}
  }
internal_employees:
\{%- for _employee_id in context.employees.internal.keys() }
 - \var{ _employee_id }
\{%- endfor }
remote_employees:
\{%- for _employee_id in context.employees.external.keys() }
 - \var{ _employee_id }
\{%- endfor }

