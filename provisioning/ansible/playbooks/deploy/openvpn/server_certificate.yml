- name: Manage OpenVPN server cert
  hosts: localhost
  connection: local
  tasks:
  - name: Generate the private key for OpenVPN server
    community.crypto.openssl_privatekey:
      path: "{{ openvpn_ca_certs_path }}/server.key"
      type: RSA
      size: 4096
      state: present

  - name: Generate the certificate signing requests for OpenVPN server
    community.crypto.openssl_csr:
      use_common_name_for_san: yes
      path: "{{ openvpn_ca_certs_path }}/server.csr"
      privatekey_path: "{{ openvpn_ca_certs_path }}/server.key"
      # we at least need a common name
      common_name: "{{ openvpn_server_name|default('vpn') }}"

  - name: Check for already existing certificates for OpenVPN server
    stat:
      path: "{{ openvpn_ca_certs_path }}/server.crt"
    register: file_check

  - name: Check state of currently existing certificates for OpenVPN server
    community.crypto.x509_certificate_info:
      path: "{{ openvpn_ca_certs_path }}/server.crt"
      valid_at:
          check: "{{ openvpn_ca_check_valid_till }}"
    when: file_check.stat.exists == true
    register: certificate_check

  - name: Delete about to expire certificate authority certificate  for OpenVPN server
    file:
      name: "{{ openvpn_ca_certs_path }}/server.crt"
      state: absent
    when: not (certificate_check.skipped is defined and certificate_check.skipped) and not certificate_check.valid_at.check

  - name: Sign certificate
    community.crypto.x509_certificate:
      path: "{{ openvpn_ca_certs_path }}/server.crt"
      csr_path: "{{ openvpn_ca_certs_path }}/server.csr"
      ownca_path: "{{ openvpn_ca_cert }}"
      ownca_privatekey_path: "{{ openvpn_ca_key }}"
      ownca_privatekey_passphrase: "{{ openvpn_ca_pw }}"
      ownca_not_before: "{{ openvpn_ca_info.valid_from | default(omit) }}"
      ownca_not_after:  "{{ openvpn_ca_info.valid_till | default(omit) }}"
      provider: ownca