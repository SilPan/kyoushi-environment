- name: Configure and deploy attacker
  hosts: attacker_0
  become: yes
  handlers:
    - name: reload dnsteal
      systemd:
        name: dnsteal
        state: "{{ dnsteal_service_state | default('stopped') }}"
        enabled: no
        daemon_reload: yes
  tasks:
    - name: Ensure python python3-pip is installed
      apt:
        name: python3-pip
        update_cache: yes
        cache_valid_time: 3600

    - name: Ensure virtualenv is installed
      pip:
        name: virtualenv
        executable: pip3

    - name: Git checkout dnsteal
      ansible.builtin.git:
        repo: "{{ dnsteal_repo }}"
        dest: "{{ dnsteal_install_dir }}"
        version: "{{ dnsteal_tag | default(omit) }}"
    
    - name: Change git directory ownership
      file:
        path: "{{ dnsteal_install_dir }}"
        owner: "{{ dnsteal_service_user | default(omit) }}"
        group: "{{ dnsteal_service_group | default(omit) }}"
        state: directory
        recurse: yes

    - name: Ensure venv path exists
      ansible.builtin.file:
        path: "{{ dnsteal_venv }}"
        owner: "{{ dnsteal_service_user | default(omit) }}"
        group: "{{ dnsteal_service_group | default(omit) }}"
        state: directory
        recurse: yes

    - name: Install dnsteal requirements
      pip:
        requirements: "{{ dnsteal_install_dir }}/requirements.txt"
        virtualenv: "{{ dnsteal_venv }}"
        virtualenv_python: "python3"
      become_user: "{{ dnsteal_service_user | default(omit) }}"

    - name: Set group to venv
      ansible.builtin.file:
        path: "{{ dnsteal_venv }}"
        owner: "{{ dnsteal_service_user | default(omit) }}"
        group: "{{ dnsteal_service_group | default(omit) }}"
        recurse: yes
    
    - name: Ensure dnsteal files dir exists
      ansible.builtin.file:
        path: "{{ dnsteal_files_dir }}"
        owner: "{{ dnsteal_service_user | default(omit) }}"
        group: "{{ dnsteal_service_group | default(omit) }}"
        state: directory
        recurse: yes
    
    - name: Copy systemd service file to attacker server
      ansible.builtin.template:
        src: dnsteal.service.j2
        dest: /etc/systemd/system/dnsteal.service
        owner: root
        group: root
      notify:
        - reload dnsteal

- name: Configure exfiltration victim server
  hosts: internal_share
  become: yes
  handlers:
    - name: reload exfil
      systemd:
        name: "{{ exfiltration_service_name }}"
        state: "{{ exfiltration_service_state | default('stopped') }}"
        enabled: no
        daemon_reload: yes
  tasks:
    - name: Copy systemd service file to victim server
      ansible.builtin.template:
        src: exfil.sh.j2
        dest: "{{ exfiltration_service_script }}"
        mode: "a+x"
        owner: "{{ exfiltration_service_user | default(omit) }}"
        group: "{{ exfiltration_service_group | default(omit) }}"
      notify:
        - reload exfil

    - name: Copy systemd service file to victim server
      ansible.builtin.template:
        src: exfil.service.j2
        dest: /etc/systemd/system/{{ exfiltration_service_name }}.service
        owner: root
        group: root
      notify:
        - reload exfil